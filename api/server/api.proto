syntax = "proto3";

package api;

option go_package = ".;server";

message Error {
  uint32 code = 1;
  string message = 2;
}

// Bastion
message PingRequest {
  string message = 1;
}

message PingResponse {
  string message = 1;
}

message BastionCheckRegistrationRequest {
  string machine_id = 1;
}

message BastionCheckRegistrationResponse {
  Error error = 1;
}

message BastionRegisterRequest {
  string id = 1;
  string hostname = 2;
}

message BastionRegisterResponse {
  Error error = 1;
}
// Client
message SignUserPublicKeyRequest {
  bytes request_data = 1;
  bytes signature = 2;
}

message SignUserPublicKeyResponse {
  Error error = 1;
  bytes response_data = 2;
}

service Server {
  // Bastion
  rpc Ping(PingRequest) returns (PingRequest) {};

  rpc BastionCheckRegistration(BastionCheckRegistrationRequest) returns (BastionRegisterRequest) {};
  rpc BastionRegister(BastionRegisterRequest) returns (BastionRegisterResponse) {};

  // Client
  rpc SignUserPublicKey(SignUserPublicKeyRequest) returns (SignUserPublicKeyResponse) {};
}